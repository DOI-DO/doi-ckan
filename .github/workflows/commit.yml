---
# On push events to the main branch, this workflow will build, test,
# push new image, and mark for re-deployment

name: 'Build and (Possibly) Release'

on:
  push:

jobs:
  test:
    name: 'Test'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    # Checkout the repository to the GitHub Actions runner
    steps:
      - name: checkout
        uses: actions/checkout@v2
      
      - name: build
        run: make build

      - name: up
        run: docker-compose up -d
      
      - name: test
        run: |
          sleep 90
          make test

  deploy-xentity:
    if: github.ref == 'refs/heads/production'
    name: deploy (staging)
    environment: staging
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Push new images
        uses: kciter/aws-ecr-action@master
        with:
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          repo: ${{ secrets.REPO_NAME }}
          region: ${{ secrets.REGION }}
          tags: ckan
          dockerfile: ckan/Dockerfile
          path: ckan/

      - name: Deploy latest images
        uses: ItsKarma/aws-cli@v1.70.0
        with:
          args: ecs update-service --cluster doi-dev-ecs-v2-ECSCluster-aqwQcwudnyuy  --service doi-ckan-stack --force-new-deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.REGION }}
          CLUSTER: ${{ secrets.CLUSTER }}
          SERVICE: ${{ secrets.SERVICE }}
      
